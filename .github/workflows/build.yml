name: Build Tagtool
run-name: ${{ github.actor }} Running Tagtool build.
on: [push]
jobs:
  build-tagtool:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      PRISMA_IMAGE: tjsrowe/prisma-generic:${{ github.sha }}

    steps:
    - name: Check out repositofy code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Install jq
      run: sudo apt-get install jq

    - name: Get the current version of Prisma
      id: get-prisma-version
      run: echo ::set-output name=version::$(PRISMA_VERSION=$(jq -r '.. | objects | select(has("node_modules/prisma")) | ."node_modules/prisma".version' package-lock.json))

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-single-buildx
        restore-keys: |
          ${{ runner.os }}-single-buildx

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      if: ${{ github.actor != 'dependabot[bot]' }}
      uses: aws-actions/amazon-ecr-login@v2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
      with:
        registry-type: public

    - name: Build prisma image
      uses: docker/build-push-action@v5
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        file: Dockerfile
        push: ${{ github.actor != 'dependabot[bot]' }}
        tags: ${{ github.actor != 'dependabot[bot]' && format('{0}/', steps.login-ecr-public.outputs.registry) || ''}}${{ env.PRISMA_IMAGE }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    
    - name: Tag image as latest Docker version
      if: ${{ github.actor != 'dependabot[bot]' }}
      run: |
          PRISMA_VERSION="${{ steps.get-prisma-version.outputs.version }}"
          ECR_HASH_VERSION="${{ format('{0}/', steps.login-ecr-public.outputs.registry) }}${{ env.PRISMA_IMAGE }}"
          ECR_PRISMA_VERSION="${{ format('{0}/', steps.login-ecr-public.outputs.registry) }}tjsrowe/prisma-generic:$PRISMA_VERSION"

          echo "Version: $PRISMA_VERSION"
          echo "ECR_HASH_VERSION: $ECR_HASH_VERSION"
          echo "ECR_VERSION: $ECR_VERSION"

          echo docker tag $ECR_HASH_VERSION $ECR_PRISMA_VERSION
